#pragma once

#include <System.Private.CoreLib/System/Object.h>

namespace System::Private::CoreLib::System {
FORWARDS(Boolean)
} // namespace System::Private::CoreLib::System
namespace System::Private::CoreLib::System::Reflection::Emit {
FORWARDS(OpCode)
namespace OpCodesNamespace {
CLASS(OpCodes) : public Object::in {
  public: static Boolean TakesSingleByteArgument(OpCode inst);
  private: static void ctor_static();
  public: static OpCode Nop;
  public: static OpCode Break;
  public: static OpCode Ldarg_0;
  public: static OpCode Ldarg_1;
  public: static OpCode Ldarg_2;
  public: static OpCode Ldarg_3;
  public: static OpCode Ldloc_0;
  public: static OpCode Ldloc_1;
  public: static OpCode Ldloc_2;
  public: static OpCode Ldloc_3;
  public: static OpCode Stloc_0;
  public: static OpCode Stloc_1;
  public: static OpCode Stloc_2;
  public: static OpCode Stloc_3;
  public: static OpCode Ldarg_S;
  public: static OpCode Ldarga_S;
  public: static OpCode Starg_S;
  public: static OpCode Ldloc_S;
  public: static OpCode Ldloca_S;
  public: static OpCode Stloc_S;
  public: static OpCode Ldnull;
  public: static OpCode Ldc_I4_M1;
  public: static OpCode Ldc_I4_0;
  public: static OpCode Ldc_I4_1;
  public: static OpCode Ldc_I4_2;
  public: static OpCode Ldc_I4_3;
  public: static OpCode Ldc_I4_4;
  public: static OpCode Ldc_I4_5;
  public: static OpCode Ldc_I4_6;
  public: static OpCode Ldc_I4_7;
  public: static OpCode Ldc_I4_8;
  public: static OpCode Ldc_I4_S;
  public: static OpCode Ldc_I4;
  public: static OpCode Ldc_I8;
  public: static OpCode Ldc_R4;
  public: static OpCode Ldc_R8;
  public: static OpCode Dup;
  public: static OpCode Pop;
  public: static OpCode Jmp;
  public: static OpCode Call;
  public: static OpCode Calli;
  public: static OpCode Ret;
  public: static OpCode Br_S;
  public: static OpCode Brfalse_S;
  public: static OpCode Brtrue_S;
  public: static OpCode Beq_S;
  public: static OpCode Bge_S;
  public: static OpCode Bgt_S;
  public: static OpCode Ble_S;
  public: static OpCode Blt_S;
  public: static OpCode Bne_Un_S;
  public: static OpCode Bge_Un_S;
  public: static OpCode Bgt_Un_S;
  public: static OpCode Ble_Un_S;
  public: static OpCode Blt_Un_S;
  public: static OpCode Br;
  public: static OpCode Brfalse;
  public: static OpCode Brtrue;
  public: static OpCode Beq;
  public: static OpCode Bge;
  public: static OpCode Bgt;
  public: static OpCode Ble;
  public: static OpCode Blt;
  public: static OpCode Bne_Un;
  public: static OpCode Bge_Un;
  public: static OpCode Bgt_Un;
  public: static OpCode Ble_Un;
  public: static OpCode Blt_Un;
  public: static OpCode Switch;
  public: static OpCode Ldind_I1;
  public: static OpCode Ldind_U1;
  public: static OpCode Ldind_I2;
  public: static OpCode Ldind_U2;
  public: static OpCode Ldind_I4;
  public: static OpCode Ldind_U4;
  public: static OpCode Ldind_I8;
  public: static OpCode Ldind_I;
  public: static OpCode Ldind_R4;
  public: static OpCode Ldind_R8;
  public: static OpCode Ldind_Ref;
  public: static OpCode Stind_Ref;
  public: static OpCode Stind_I1;
  public: static OpCode Stind_I2;
  public: static OpCode Stind_I4;
  public: static OpCode Stind_I8;
  public: static OpCode Stind_R4;
  public: static OpCode Stind_R8;
  public: static OpCode Add;
  public: static OpCode Sub;
  public: static OpCode Mul;
  public: static OpCode Div;
  public: static OpCode Div_Un;
  public: static OpCode Rem;
  public: static OpCode Rem_Un;
  public: static OpCode And;
  public: static OpCode Or;
  public: static OpCode Xor;
  public: static OpCode Shl;
  public: static OpCode Shr;
  public: static OpCode Shr_Un;
  public: static OpCode Neg;
  public: static OpCode Not;
  public: static OpCode Conv_I1;
  public: static OpCode Conv_I2;
  public: static OpCode Conv_I4;
  public: static OpCode Conv_I8;
  public: static OpCode Conv_R4;
  public: static OpCode Conv_R8;
  public: static OpCode Conv_U4;
  public: static OpCode Conv_U8;
  public: static OpCode Callvirt;
  public: static OpCode Cpobj;
  public: static OpCode Ldobj;
  public: static OpCode Ldstr;
  public: static OpCode Newobj;
  public: static OpCode Castclass;
  public: static OpCode Isinst;
  public: static OpCode Conv_R_Un;
  public: static OpCode Unbox;
  public: static OpCode Throw;
  public: static OpCode Ldfld;
  public: static OpCode Ldflda;
  public: static OpCode Stfld;
  public: static OpCode Ldsfld;
  public: static OpCode Ldsflda;
  public: static OpCode Stsfld;
  public: static OpCode Stobj;
  public: static OpCode Conv_Ovf_I1_Un;
  public: static OpCode Conv_Ovf_I2_Un;
  public: static OpCode Conv_Ovf_I4_Un;
  public: static OpCode Conv_Ovf_I8_Un;
  public: static OpCode Conv_Ovf_U1_Un;
  public: static OpCode Conv_Ovf_U2_Un;
  public: static OpCode Conv_Ovf_U4_Un;
  public: static OpCode Conv_Ovf_U8_Un;
  public: static OpCode Conv_Ovf_I_Un;
  public: static OpCode Conv_Ovf_U_Un;
  public: static OpCode Box;
  public: static OpCode Newarr;
  public: static OpCode Ldlen;
  public: static OpCode Ldelema;
  public: static OpCode Ldelem_I1;
  public: static OpCode Ldelem_U1;
  public: static OpCode Ldelem_I2;
  public: static OpCode Ldelem_U2;
  public: static OpCode Ldelem_I4;
  public: static OpCode Ldelem_U4;
  public: static OpCode Ldelem_I8;
  public: static OpCode Ldelem_I;
  public: static OpCode Ldelem_R4;
  public: static OpCode Ldelem_R8;
  public: static OpCode Ldelem_Ref;
  public: static OpCode Stelem_I;
  public: static OpCode Stelem_I1;
  public: static OpCode Stelem_I2;
  public: static OpCode Stelem_I4;
  public: static OpCode Stelem_I8;
  public: static OpCode Stelem_R4;
  public: static OpCode Stelem_R8;
  public: static OpCode Stelem_Ref;
  public: static OpCode Ldelem;
  public: static OpCode Stelem;
  public: static OpCode Unbox_Any;
  public: static OpCode Conv_Ovf_I1;
  public: static OpCode Conv_Ovf_U1;
  public: static OpCode Conv_Ovf_I2;
  public: static OpCode Conv_Ovf_U2;
  public: static OpCode Conv_Ovf_I4;
  public: static OpCode Conv_Ovf_U4;
  public: static OpCode Conv_Ovf_I8;
  public: static OpCode Conv_Ovf_U8;
  public: static OpCode Refanyval;
  public: static OpCode Ckfinite;
  public: static OpCode Mkrefany;
  public: static OpCode Ldtoken;
  public: static OpCode Conv_U2;
  public: static OpCode Conv_U1;
  public: static OpCode Conv_I;
  public: static OpCode Conv_Ovf_I;
  public: static OpCode Conv_Ovf_U;
  public: static OpCode Add_Ovf;
  public: static OpCode Add_Ovf_Un;
  public: static OpCode Mul_Ovf;
  public: static OpCode Mul_Ovf_Un;
  public: static OpCode Sub_Ovf;
  public: static OpCode Sub_Ovf_Un;
  public: static OpCode Endfinally;
  public: static OpCode Leave;
  public: static OpCode Leave_S;
  public: static OpCode Stind_I;
  public: static OpCode Conv_U;
  public: static OpCode Prefix7;
  public: static OpCode Prefix6;
  public: static OpCode Prefix5;
  public: static OpCode Prefix4;
  public: static OpCode Prefix3;
  public: static OpCode Prefix2;
  public: static OpCode Prefix1;
  public: static OpCode Prefixref;
  public: static OpCode Arglist;
  public: static OpCode Ceq;
  public: static OpCode Cgt;
  public: static OpCode Cgt_Un;
  public: static OpCode Clt;
  public: static OpCode Clt_Un;
  public: static OpCode Ldftn;
  public: static OpCode Ldvirtftn;
  public: static OpCode Ldarg;
  public: static OpCode Ldarga;
  public: static OpCode Starg;
  public: static OpCode Ldloc;
  public: static OpCode Ldloca;
  public: static OpCode Stloc;
  public: static OpCode Localloc;
  public: static OpCode Endfilter;
  public: static OpCode Unaligned;
  public: static OpCode Volatile;
  public: static OpCode Tailcall;
  public: static OpCode Initobj;
  public: static OpCode Constrained;
  public: static OpCode Cpblk;
  public: static OpCode Initblk;
  public: static OpCode Rethrow;
  public: static OpCode Sizeof;
  public: static OpCode Refanytype;
  public: static OpCode Readonly;
};
} // namespace OpCodesNamespace
using OpCodes = OpCodesNamespace::OpCodes;
} // namespace System::Private::CoreLib::System::Reflection::Emit
